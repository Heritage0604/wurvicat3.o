{
    "sourceFile": "src/components/ProjectsDashboard.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 21,
            "patches": [
                {
                    "date": 1695040370739,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1695040402888,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,9 +87,9 @@\n  theme=\"snow\" />\r\n \r\n     <Flex mt={\"10vh\"} justify='flex-end' >\r\n         <Button  color='white'  colorScheme='blue' mr={\"30px\"}>Submit</Button>\r\n-        <Button variant=\"outline\" onClick={()=>router.push('/admin/products')}  colorScheme='red' >Cancel</Button> \r\n+        <Button variant=\"outline\"   colorScheme='red' >Cancel</Button> \r\n     </Flex>\r\n \r\n </Flex>\r\n \r\n"
                },
                {
                    "date": 1695040713891,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,9 +77,9 @@\n <input type=\"file\" className='hidden' accept=\"image/*\"  />\r\n \r\n         </label>\r\n \r\n-<Flex  ml={{base:'0',lg:\"10vw\"}} width={{base:'100%',lg:\"40%\"}} flexDir='column' mt={{base:\"5vh\",lg:\"0\"}}>\r\n+<Flex  width={{base:'100%',lg:\"40%\"}} flexDir='column' mt={{base:\"5vh\",lg:\"0\"}}>\r\n     <Text>Product Description</Text>\r\n   <ReactQuill value={description} \r\n   className='h-[300px] mb-12 lg:h-[400px] w-full'\r\n  onChange={setDescription} placeholder=\"Product description\"\r\n"
                },
                {
                    "date": 1695040748241,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,10 +77,9 @@\n <input type=\"file\" className='hidden' accept=\"image/*\"  />\r\n \r\n         </label>\r\n \r\n-<Flex  width={{base:'100%',lg:\"40%\"}} flexDir='column' mt={{base:\"5vh\",lg:\"0\"}}>\r\n-    <Text>Product Description</Text>\r\n+<Flex  width={{base:'100%',lg:\"100%\"}} flexDir='column' >\r\n   <ReactQuill value={description} \r\n   className='h-[300px] mb-12 lg:h-[400px] w-full'\r\n  onChange={setDescription} placeholder=\"Product description\"\r\n  modules={EditorModule}  formats={formats}\r\n"
                },
                {
                    "date": 1695040759876,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,9 +64,9 @@\n   return (\r\n     <Flex position='relative' mt={\"15vh\"} justify='center' align='center'>\r\n <Flex bg='white'  justify='space-around' mb={\"10vh\"} flexDirection={{base:\"column\"}} boxShadow='md' p='6' rounded='md' width={{base:\"85%\",md:\"70%\"}}>\r\n     <Flex mb={\"5vh\"} width={{base:\"90%\",lg:\"60%\"}} flexDirection={{base:\"column\",lg:\"row\"}}>\r\n-        <Input placeholder='title of the project' _placeholder={{color:\"gray\"}}  color='black' _hover={{border:'1px solid black'}} border='1px solid black' />\r\n+        <Input placeholder='title of the project' _placeholder={{color:\"gray\"}}  color='black' _hover={{border:'1px solid black'}}  />\r\n     </Flex>\r\n \r\n        <label   className='w-[90px] mb-12 h-20 cursor-pointer bg-gray-300 text-sm text-gray-500 rounded-lg border flex justify-center items-center'>\r\n      \r\n"
                },
                {
                    "date": 1695040777768,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,9 @@\n  onChange={setDescription} placeholder=\"Product description\"\r\n  modules={EditorModule}  formats={formats}\r\n  theme=\"snow\" />\r\n \r\n-    <Flex mt={\"10vh\"} justify='flex-end' >\r\n+    <Flex mt={\"15vh\"} justify='flex-end' >\r\n         <Button  color='white'  colorScheme='blue' mr={\"30px\"}>Submit</Button>\r\n         <Button variant=\"outline\"   colorScheme='red' >Cancel</Button> \r\n     </Flex>\r\n \r\n"
                },
                {
                    "date": 1695040795795,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,9 @@\n  onChange={setDescription} placeholder=\"Product description\"\r\n  modules={EditorModule}  formats={formats}\r\n  theme=\"snow\" />\r\n \r\n-    <Flex mt={\"15vh\"} justify='flex-end' >\r\n+    <Flex mt={{base:\"15vh\"}} justify='flex-end' >\r\n         <Button  color='white'  colorScheme='blue' mr={\"30px\"}>Submit</Button>\r\n         <Button variant=\"outline\"   colorScheme='red' >Cancel</Button> \r\n     </Flex>\r\n \r\n"
                },
                {
                    "date": 1695040813762,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,9 @@\n  onChange={setDescription} placeholder=\"Product description\"\r\n  modules={EditorModule}  formats={formats}\r\n  theme=\"snow\" />\r\n \r\n-    <Flex mt={{base:\"15vh\"}} justify='flex-end' >\r\n+    <Flex mt={{base:\"15vh\",lg:\"10vh\"}} justify='flex-end' >\r\n         <Button  color='white'  colorScheme='blue' mr={\"30px\"}>Submit</Button>\r\n         <Button variant=\"outline\"   colorScheme='red' >Cancel</Button> \r\n     </Flex>\r\n \r\n"
                },
                {
                    "date": 1695040870238,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,9 +80,9 @@\n \r\n <Flex  width={{base:'100%',lg:\"100%\"}} flexDir='column' >\r\n   <ReactQuill value={description} \r\n   className='h-[300px] mb-12 lg:h-[400px] w-full'\r\n- onChange={setDescription} placeholder=\"Product description\"\r\n+ onChange={setDescription} placeholder=\"Project description\"\r\n  modules={EditorModule}  formats={formats}\r\n  theme=\"snow\" />\r\n \r\n     <Flex mt={{base:\"15vh\",lg:\"10vh\"}} justify='flex-end' >\r\n"
                },
                {
                    "date": 1695041066706,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,8 +60,9 @@\n \r\n \r\n const ProjectsDashboard = () => {\r\n      const[description,setDescription]=useState(\"\")\r\n+     const[title,setTit]\r\n   return (\r\n     <Flex position='relative' mt={\"15vh\"} justify='center' align='center'>\r\n <Flex bg='white'  justify='space-around' mb={\"10vh\"} flexDirection={{base:\"column\"}} boxShadow='md' p='6' rounded='md' width={{base:\"85%\",md:\"70%\"}}>\r\n     <Flex mb={\"5vh\"} width={{base:\"90%\",lg:\"60%\"}} flexDirection={{base:\"column\",lg:\"row\"}}>\r\n"
                },
                {
                    "date": 1695041074467,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,9 @@\n \r\n \r\n const ProjectsDashboard = () => {\r\n      const[description,setDescription]=useState(\"\")\r\n-     const[title,setTit]\r\n+     const[title,setTitle]=useState(\"\")\r\n   return (\r\n     <Flex position='relative' mt={\"15vh\"} justify='center' align='center'>\r\n <Flex bg='white'  justify='space-around' mb={\"10vh\"} flexDirection={{base:\"column\"}} boxShadow='md' p='6' rounded='md' width={{base:\"85%\",md:\"70%\"}}>\r\n     <Flex mb={\"5vh\"} width={{base:\"90%\",lg:\"60%\"}} flexDirection={{base:\"column\",lg:\"row\"}}>\r\n"
                },
                {
                    "date": 1695041194526,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n import { Flex,Text,Image,Input,Textarea,Button,Stack,Icon } from '@chakra-ui/react'\r\n import React,{useState,useEffect} from 'react'\r\n import 'react-quill/dist/quill.snow.css';\r\n import dynamic from \"next/dynamic\";\r\n+import { useRouter } from 'next/router';\r\n \r\n const ReactQuill = dynamic(import('react-quill'), { ssr: false })\r\n const EditorModule = {\r\n toolbar: [\r\n"
                },
                {
                    "date": 1695041210396,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,8 +62,9 @@\n \r\n const ProjectsDashboard = () => {\r\n      const[description,setDescription]=useState(\"\")\r\n      const[title,setTitle]=useState(\"\")\r\n+     const router=useRouter()\r\n   return (\r\n     <Flex position='relative' mt={\"15vh\"} justify='center' align='center'>\r\n <Flex bg='white'  justify='space-around' mb={\"10vh\"} flexDirection={{base:\"column\"}} boxShadow='md' p='6' rounded='md' width={{base:\"85%\",md:\"70%\"}}>\r\n     <Flex mb={\"5vh\"} width={{base:\"90%\",lg:\"60%\"}} flexDirection={{base:\"column\",lg:\"row\"}}>\r\n"
                },
                {
                    "date": 1695041258435,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,106 @@\n+import { Flex,Text,Image,Input,Textarea,Button,Stack,Icon } from '@chakra-ui/react'\r\n+import React,{useState,useEffect} from 'react'\r\n+import 'react-quill/dist/quill.snow.css';\r\n+import dynamic from \"next/dynamic\";\r\n+import { useRouter } from 'next/router';\r\n+\r\n+const ReactQuill = dynamic(import('react-quill'), { ssr: false })\r\n+const EditorModule = {\r\n+toolbar: [\r\n+  ['bold', 'italic', 'underline', 'strike'],        // toggled buttons\r\n+  ['blockquote', 'code-block'],\r\n+\r\n+  [{ 'header': 1 }, { 'header': 2 }],               // custom button values\r\n+  [{ 'list': 'ordered'}, { 'list': 'bullet' }],\r\n+  [{ 'script': 'sub'}, { 'script': 'super' }],      // superscript/subscript\r\n+  [{ 'indent': '-1'}, { 'indent': '+1' }], \r\n+  ['link', 'image', 'video'],         // outdent/indent\r\n+  [{ 'direction': 'rtl' }],                         // text direction\r\n+\r\n+  [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown\r\n+  [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\r\n+\r\n+  [{ 'color': [] }, { 'background': [] }],          // dropdown with defaults from theme\r\n+  [{ 'font': [] }],\r\n+  [{ 'align': [] }],\r\n+\r\n+  ['clean']                                         // remove formatting button\r\n+],\r\n+  clipboard: {\r\n+    // toggle to add extra line breaks when pasting HTML:\r\n+    matchVisual: false,\r\n+  }\r\n+}\r\n+\r\n+const formats = [\r\n+  'header', 'font', 'size',\r\n+  'bold', 'italic', 'underline', 'strike', 'blockquote',\r\n+  'list', 'bullet', 'indent',\r\n+  'link', 'image', 'video'\r\n+]\r\n+\r\n+var toolbarOptions = [\r\n+  ['bold', 'italic', 'underline', 'strike'],        // toggled buttons\r\n+  ['blockquote', 'code-block'],\r\n+\r\n+  [{ 'header': 1 }, { 'header': 2 }],               // custom button values\r\n+  [{ 'list': 'ordered'}, { 'list': 'bullet' }],\r\n+  [{ 'script': 'sub'}, { 'script': 'super' }],      // superscript/subscript\r\n+  [{ 'indent': '-1'}, { 'indent': '+1' }],          // outdent/indent\r\n+  [{ 'direction': 'rtl' }],                         // text direction\r\n+\r\n+  [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown\r\n+  [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\r\n+\r\n+  [{ 'color': [] }, { 'background': [] }],          // dropdown with defaults from theme\r\n+  [{ 'font': [] }],\r\n+  [{ 'align': [] }],\r\n+\r\n+  ['clean']                                         // remove formatting button\r\n+];\r\n+\r\n+\r\n+const ProjectsDashboard = () => {\r\n+     const[description,setDescription]=useState(\"\")\r\n+     const[title,setTitle]=useState(\"\")\r\n+     const router=useRouter()\r\n+     const [user, loading, errorUser] = useAuthState(auth);\r\n+  return (\r\n+    <Flex position='relative' mt={\"15vh\"} justify='center' align='center'>\r\n+<Flex bg='white'  justify='space-around' mb={\"10vh\"} flexDirection={{base:\"column\"}} boxShadow='md' p='6' rounded='md' width={{base:\"85%\",md:\"70%\"}}>\r\n+    <Flex mb={\"5vh\"} width={{base:\"90%\",lg:\"60%\"}} flexDirection={{base:\"column\",lg:\"row\"}}>\r\n+        <Input placeholder='title of the project' _placeholder={{color:\"gray\"}}  color='black' _hover={{border:'1px solid black'}}  />\r\n+    </Flex>\r\n+\r\n+       <label   className='w-[90px] mb-12 h-20 cursor-pointer bg-gray-300 text-sm text-gray-500 rounded-lg border flex justify-center items-center'>\r\n+     \r\n+<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"ml-1 mr-1 w-4 h-4\">\r\n+  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M3 16.5v2.25A2.25 2.25 0 005.25 21h13.5A2.25 2.25 0 0021 18.75V16.5m-13.5-9L12 3m0 0l4.5 4.5M12 3v13.5\" />\r\n+</svg>\r\n+     Upload\r\n+<input type=\"file\" className='hidden' accept=\"image/*\"  />\r\n+\r\n+        </label>\r\n+\r\n+<Flex  width={{base:'100%',lg:\"100%\"}} flexDir='column' >\r\n+  <ReactQuill value={description} \r\n+  className='h-[300px] mb-12 lg:h-[400px] w-full'\r\n+ onChange={setDescription} placeholder=\"Project description\"\r\n+ modules={EditorModule}  formats={formats}\r\n+ theme=\"snow\" />\r\n+\r\n+    <Flex mt={{base:\"15vh\",lg:\"10vh\"}} justify='flex-end' >\r\n+        <Button  color='white'  colorScheme='blue' mr={\"30px\"}>Submit</Button>\r\n+        <Button variant=\"outline\"   colorScheme='red' >Cancel</Button> \r\n+    </Flex>\r\n+\r\n+</Flex>\r\n+\r\n+\r\n+\r\n+</Flex>\r\n+    </Flex>\r\n+  )\r\n+}\r\n+\r\n+export default ProjectsDashboard\n\\ No newline at end of file\n"
                },
                {
                    "date": 1695041276814,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,21 @@\n+import { adminUserState } from '@/atoms/AdminUser'\r\n+import { Product, props } from '@/atoms/Products'\r\n+import { auth,db, storage } from '@/firebase/firebase'\r\n import { Flex,Text,Image,Input,Textarea,Button,Stack,Icon } from '@chakra-ui/react'\r\n-import React,{useState,useEffect} from 'react'\r\n+import React,{useEffect,useState,useRef} from 'react'\r\n+import { useAuthState } from 'react-firebase-hooks/auth'\r\n+import{MdOutlineCancel}from \"react-icons/md\"\r\n+import { useRecoilState } from 'recoil'\r\n+import { getDoc,doc ,updateDoc, arrayUnion, deleteField} from 'firebase/firestore';\r\n+import { collection, addDoc,Timestamp } from \"firebase/firestore\";\r\n+import {toast} from \"react-toastify\" \r\n+import { useRouter } from 'next/router'\r\n import 'react-quill/dist/quill.snow.css';\r\n import dynamic from \"next/dynamic\";\r\n-import { useRouter } from 'next/router';\r\n+import { deleteObject, getDownloadURL, ref, uploadString } from 'firebase/storage'\r\n \r\n+\r\n const ReactQuill = dynamic(import('react-quill'), { ssr: false })\r\n const EditorModule = {\r\n toolbar: [\r\n   ['bold', 'italic', 'underline', 'strike'],        // toggled buttons\r\n@@ -102,110 +113,5 @@\n     </Flex>\r\n   )\r\n }\r\n \r\n-export default ProjectsDashboard\n-import { Flex,Text,Image,Input,Textarea,Button,Stack,Icon } from '@chakra-ui/react'\r\n-import React,{useState,useEffect} from 'react'\r\n-import 'react-quill/dist/quill.snow.css';\r\n-import dynamic from \"next/dynamic\";\r\n-import { useRouter } from 'next/router';\r\n-\r\n-const ReactQuill = dynamic(import('react-quill'), { ssr: false })\r\n-const EditorModule = {\r\n-toolbar: [\r\n-  ['bold', 'italic', 'underline', 'strike'],        // toggled buttons\r\n-  ['blockquote', 'code-block'],\r\n-\r\n-  [{ 'header': 1 }, { 'header': 2 }],               // custom button values\r\n-  [{ 'list': 'ordered'}, { 'list': 'bullet' }],\r\n-  [{ 'script': 'sub'}, { 'script': 'super' }],      // superscript/subscript\r\n-  [{ 'indent': '-1'}, { 'indent': '+1' }], \r\n-  ['link', 'image', 'video'],         // outdent/indent\r\n-  [{ 'direction': 'rtl' }],                         // text direction\r\n-\r\n-  [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown\r\n-  [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\r\n-\r\n-  [{ 'color': [] }, { 'background': [] }],          // dropdown with defaults from theme\r\n-  [{ 'font': [] }],\r\n-  [{ 'align': [] }],\r\n-\r\n-  ['clean']                                         // remove formatting button\r\n-],\r\n-  clipboard: {\r\n-    // toggle to add extra line breaks when pasting HTML:\r\n-    matchVisual: false,\r\n-  }\r\n-}\r\n-\r\n-const formats = [\r\n-  'header', 'font', 'size',\r\n-  'bold', 'italic', 'underline', 'strike', 'blockquote',\r\n-  'list', 'bullet', 'indent',\r\n-  'link', 'image', 'video'\r\n-]\r\n-\r\n-var toolbarOptions = [\r\n-  ['bold', 'italic', 'underline', 'strike'],        // toggled buttons\r\n-  ['blockquote', 'code-block'],\r\n-\r\n-  [{ 'header': 1 }, { 'header': 2 }],               // custom button values\r\n-  [{ 'list': 'ordered'}, { 'list': 'bullet' }],\r\n-  [{ 'script': 'sub'}, { 'script': 'super' }],      // superscript/subscript\r\n-  [{ 'indent': '-1'}, { 'indent': '+1' }],          // outdent/indent\r\n-  [{ 'direction': 'rtl' }],                         // text direction\r\n-\r\n-  [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown\r\n-  [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\r\n-\r\n-  [{ 'color': [] }, { 'background': [] }],          // dropdown with defaults from theme\r\n-  [{ 'font': [] }],\r\n-  [{ 'align': [] }],\r\n-\r\n-  ['clean']                                         // remove formatting button\r\n-];\r\n-\r\n-\r\n-const ProjectsDashboard = () => {\r\n-     const[description,setDescription]=useState(\"\")\r\n-     const[title,setTitle]=useState(\"\")\r\n-     const router=useRouter()\r\n-  return (\r\n-    <Flex position='relative' mt={\"15vh\"} justify='center' align='center'>\r\n-<Flex bg='white'  justify='space-around' mb={\"10vh\"} flexDirection={{base:\"column\"}} boxShadow='md' p='6' rounded='md' width={{base:\"85%\",md:\"70%\"}}>\r\n-    <Flex mb={\"5vh\"} width={{base:\"90%\",lg:\"60%\"}} flexDirection={{base:\"column\",lg:\"row\"}}>\r\n-        <Input placeholder='title of the project' _placeholder={{color:\"gray\"}}  color='black' _hover={{border:'1px solid black'}}  />\r\n-    </Flex>\r\n-\r\n-       <label   className='w-[90px] mb-12 h-20 cursor-pointer bg-gray-300 text-sm text-gray-500 rounded-lg border flex justify-center items-center'>\r\n-     \r\n-<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"ml-1 mr-1 w-4 h-4\">\r\n-  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M3 16.5v2.25A2.25 2.25 0 005.25 21h13.5A2.25 2.25 0 0021 18.75V16.5m-13.5-9L12 3m0 0l4.5 4.5M12 3v13.5\" />\r\n-</svg>\r\n-     Upload\r\n-<input type=\"file\" className='hidden' accept=\"image/*\"  />\r\n-\r\n-        </label>\r\n-\r\n-<Flex  width={{base:'100%',lg:\"100%\"}} flexDir='column' >\r\n-  <ReactQuill value={description} \r\n-  className='h-[300px] mb-12 lg:h-[400px] w-full'\r\n- onChange={setDescription} placeholder=\"Project description\"\r\n- modules={EditorModule}  formats={formats}\r\n- theme=\"snow\" />\r\n-\r\n-    <Flex mt={{base:\"15vh\",lg:\"10vh\"}} justify='flex-end' >\r\n-        <Button  color='white'  colorScheme='blue' mr={\"30px\"}>Submit</Button>\r\n-        <Button variant=\"outline\"   colorScheme='red' >Cancel</Button> \r\n-    </Flex>\r\n-\r\n-</Flex>\r\n-\r\n-\r\n-\r\n-</Flex>\r\n-    </Flex>\r\n-  )\r\n-}\r\n-\r\n export default ProjectsDashboard\n\\ No newline at end of file\n"
                },
                {
                    "date": 1695041327080,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,8 +73,9 @@\n \r\n const ProjectsDashboard = () => {\r\n      const[description,setDescription]=useState(\"\")\r\n      const[title,setTitle]=useState(\"\")\r\n+       const [file, setFile] = useState<props[]>([]);\r\n      const router=useRouter()\r\n      const [user, loading, errorUser] = useAuthState(auth);\r\n   return (\r\n     <Flex position='relative' mt={\"15vh\"} justify='center' align='center'>\r\n"
                },
                {
                    "date": 1695041341812,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,13 @@\n \r\n   ['clean']                                         // remove formatting button\r\n ];\r\n \r\n+type EditProductProps = {\r\n+    productData:Product\r\n+};\r\n \r\n+\r\n const ProjectsDashboard = () => {\r\n      const[description,setDescription]=useState(\"\")\r\n      const[title,setTitle]=useState(\"\")\r\n        const [file, setFile] = useState<props[]>([]);\r\n"
                },
                {
                    "date": 1695041372855,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,8 +80,9 @@\n      const[title,setTitle]=useState(\"\")\r\n        const [file, setFile] = useState<props[]>([]);\r\n      const router=useRouter()\r\n      const [user, loading, errorUser] = useAuthState(auth);\r\n+     const[userValue,setUserValue]=useRecoilState(adminUserState)\r\n   return (\r\n     <Flex position='relative' mt={\"15vh\"} justify='center' align='center'>\r\n <Flex bg='white'  justify='space-around' mb={\"10vh\"} flexDirection={{base:\"column\"}} boxShadow='md' p='6' rounded='md' width={{base:\"85%\",md:\"70%\"}}>\r\n     <Flex mb={\"5vh\"} width={{base:\"90%\",lg:\"60%\"}} flexDirection={{base:\"column\",lg:\"row\"}}>\r\n"
                },
                {
                    "date": 1695041391644,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,8 +81,12 @@\n        const [file, setFile] = useState<props[]>([]);\r\n      const router=useRouter()\r\n      const [user, loading, errorUser] = useAuthState(auth);\r\n      const[userValue,setUserValue]=useRecoilState(adminUserState)\r\n+\r\n+\r\n+\r\n+     \r\n   return (\r\n     <Flex position='relative' mt={\"15vh\"} justify='center' align='center'>\r\n <Flex bg='white'  justify='space-around' mb={\"10vh\"} flexDirection={{base:\"column\"}} boxShadow='md' p='6' rounded='md' width={{base:\"85%\",md:\"70%\"}}>\r\n     <Flex mb={\"5vh\"} width={{base:\"90%\",lg:\"60%\"}} flexDirection={{base:\"column\",lg:\"row\"}}>\r\n"
                },
                {
                    "date": 1695041416761,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,12 +81,12 @@\n        const [file, setFile] = useState<props[]>([]);\r\n      const router=useRouter()\r\n      const [user, loading, errorUser] = useAuthState(auth);\r\n      const[userValue,setUserValue]=useRecoilState(adminUserState)\r\n+      const sanitizedHTML = description.trim().replace(/<p><br><\\/p>/g, '')\r\n \r\n \r\n \r\n-     \r\n   return (\r\n     <Flex position='relative' mt={\"15vh\"} justify='center' align='center'>\r\n <Flex bg='white'  justify='space-around' mb={\"10vh\"} flexDirection={{base:\"column\"}} boxShadow='md' p='6' rounded='md' width={{base:\"85%\",md:\"70%\"}}>\r\n     <Flex mb={\"5vh\"} width={{base:\"90%\",lg:\"60%\"}} flexDirection={{base:\"column\",lg:\"row\"}}>\r\n"
                },
                {
                    "date": 1695041528647,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,10 +84,146 @@\n      const[userValue,setUserValue]=useRecoilState(adminUserState)\r\n       const sanitizedHTML = description.trim().replace(/<p><br><\\/p>/g, '')\r\n \r\n \r\n+        const onSelectImage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n+    const reader = new FileReader();\r\n+    if(file.length >= 5 ){\r\n+        return\r\n+    }\r\n+    if (event.target.files?.[0]) {\r\n+      reader.readAsDataURL(event.target.files[0]);\r\n+    }\r\n+\r\n+    reader.onload = (readerEvent) => {\r\n+      if (readerEvent.target?.result) {\r\n+        setFile((prevImage)=>[...prevImage,{image:readerEvent.target?.result as string,id:Date.now() as number}]);\r\n+      }\r\n+    };\r\n+  };\r\n+  \r\n+  const onRemoveImage=(id:number)=>{\r\n+setFile((prevImage)=>prevImage.filter((item)=>item.id != id))\r\n+setDeleteFile([...deleteFile,id])\r\n+  }\r\n+\r\n+const handleSubmit= async()=>{\r\n+    ;\r\n       \r\n+        if (regex.test(name) ||  regex.test(price) ||  regex.test(category) ||  sanitizedHTML == ''  ){\r\n+      // Empty string\r\n+       setError('Input values can not be  empty');\r\n+     alert(\"Input values can not be  empty\")\r\n+    setTimeout(()=>{\r\n+setError(\"\")\r\n+    },8000)\r\n+     return\r\n+    }\r\n+try{\r\n \r\n+const productData2:any={\r\n+    name,\r\n+    category,\r\n+    description,\r\n+    price,\r\n+    \r\n+   \r\n+}\r\n+const productRef = doc(db, \"products\", `${router.query.id}`)\r\n+await updateDoc(productRef,productData2);\r\n+\r\n+// clear all images \r\n+  if(productData.imageURL){\r\n+     productData?.imageURL.map((img,index)=>{\r\n+      const deletRef = ref(storage, `products/${img.id}/image`);\r\n+\r\n+\r\n+deleteObject(deletRef).then(() => {\r\n+   updateDoc(doc(db, \"products\", `${router.query.id}`), {\r\n+    imageURL: deleteField()\r\n+});\r\n+}).catch((error:any) => {\r\n+ throw new Error('a new error')\r\n+ console.log(error.message)\r\n+});\r\n+  \r\n+    })\r\n+   }\r\n+\r\n+//    update new images\r\n+if(file.length>0){\r\n+file.map(async (img,index)=>{\r\n+   const imageRef = ref(storage, `products/${img.id}/image`);\r\n+      await uploadString(imageRef, img.image, \"data_url\");\r\n+      const downloadURL =   await getDownloadURL(imageRef);\r\n+      await updateDoc(doc(db, \"products\", `${router.query.id}`), {\r\n+       imageURL: arrayUnion({id:img.id,image:downloadURL})\r\n+      });\r\n+     \r\n+})\r\n+}\r\n+// clear the list if no imaghe is in file\r\n+else{\r\n+   if(productData.imageURL){\r\n+     productData?.imageURL.map((img,index)=>{\r\n+      const deletRef = ref(storage, `products/${img.id}/image`);\r\n+\r\n+\r\n+deleteObject(deletRef).then(() => {\r\n+   updateDoc(doc(db, \"products\", `${router.query.id}`), {\r\n+    imageURL: deleteField()\r\n+});\r\n+}).catch((error:any) => {\r\n+ throw new Error('a new error')\r\n+ console.log(error.message)\r\n+});\r\n+  \r\n+    })\r\n+   }\r\n+}\r\n+\r\n+toast.success(\"Product Created Successfully\",{position:\"top-center\",autoClose:1500,theme:\"light\"})\r\n+router.push('/admin/products')\r\n+}\r\n+catch(e:any){\r\n+toast.error(\"An Error Ocurred\",{position:\"top-center\",autoClose:1500,theme:\"light\"})\r\n+\r\n+}\r\n+\r\n+\r\n+}\r\n+\r\n+\r\n+const  getUser= async(id:any)=>{\r\n+ const docRef = doc(db, \"Admin\", id);\r\n+const docSnap = await getDoc(docRef);\r\n+\r\n+if (docSnap.exists()) {\r\n+  const userData:any=docSnap.data()\r\n+setUserValue(userData)\r\n+setName(productData.name)\r\n+setDescription(productData.description)\r\n+setPrice(productData.price)\r\n+setCategory(productData.category)\r\n+if(productData.imageURL){\r\n+setFile(productData!.imageURL)\r\n+\r\n+}\r\n+\r\n+\r\n+ \r\n+} else {\r\n+ \r\n+}\r\n+    }\r\n+    \r\n+useEffect(()=>{\r\n+if(user){\r\n+ getUser(user.email)\r\n+}\r\n+\r\n+},[user,loading,error])\r\n+\r\n   return (\r\n     <Flex position='relative' mt={\"15vh\"} justify='center' align='center'>\r\n <Flex bg='white'  justify='space-around' mb={\"10vh\"} flexDirection={{base:\"column\"}} boxShadow='md' p='6' rounded='md' width={{base:\"85%\",md:\"70%\"}}>\r\n     <Flex mb={\"5vh\"} width={{base:\"90%\",lg:\"60%\"}} flexDirection={{base:\"column\",lg:\"row\"}}>\r\n"
                },
                {
                    "date": 1695042016092,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -108,9 +108,9 @@\n \r\n   }\r\n \r\n const handleSubmit= async()=>{\r\n-      // test if the d\r\n+      // test if the title a\r\n         if (regex.test(title) ||  sanitizedHTML == ''  ){\r\n       // Empty string\r\n        setError('Input values can not be  empty');\r\n      alert(\"Input values can not be  empty\")\r\n"
                }
            ],
            "date": 1695040370739,
            "name": "Commit-0",
            "content": "import { Flex,Text,Image,Input,Textarea,Button,Stack,Icon } from '@chakra-ui/react'\r\nimport React,{useState,useEffect} from 'react'\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport dynamic from \"next/dynamic\";\r\n\r\nconst ReactQuill = dynamic(import('react-quill'), { ssr: false })\r\nconst EditorModule = {\r\ntoolbar: [\r\n  ['bold', 'italic', 'underline', 'strike'],        // toggled buttons\r\n  ['blockquote', 'code-block'],\r\n\r\n  [{ 'header': 1 }, { 'header': 2 }],               // custom button values\r\n  [{ 'list': 'ordered'}, { 'list': 'bullet' }],\r\n  [{ 'script': 'sub'}, { 'script': 'super' }],      // superscript/subscript\r\n  [{ 'indent': '-1'}, { 'indent': '+1' }], \r\n  ['link', 'image', 'video'],         // outdent/indent\r\n  [{ 'direction': 'rtl' }],                         // text direction\r\n\r\n  [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown\r\n  [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\r\n\r\n  [{ 'color': [] }, { 'background': [] }],          // dropdown with defaults from theme\r\n  [{ 'font': [] }],\r\n  [{ 'align': [] }],\r\n\r\n  ['clean']                                         // remove formatting button\r\n],\r\n  clipboard: {\r\n    // toggle to add extra line breaks when pasting HTML:\r\n    matchVisual: false,\r\n  }\r\n}\r\n\r\nconst formats = [\r\n  'header', 'font', 'size',\r\n  'bold', 'italic', 'underline', 'strike', 'blockquote',\r\n  'list', 'bullet', 'indent',\r\n  'link', 'image', 'video'\r\n]\r\n\r\nvar toolbarOptions = [\r\n  ['bold', 'italic', 'underline', 'strike'],        // toggled buttons\r\n  ['blockquote', 'code-block'],\r\n\r\n  [{ 'header': 1 }, { 'header': 2 }],               // custom button values\r\n  [{ 'list': 'ordered'}, { 'list': 'bullet' }],\r\n  [{ 'script': 'sub'}, { 'script': 'super' }],      // superscript/subscript\r\n  [{ 'indent': '-1'}, { 'indent': '+1' }],          // outdent/indent\r\n  [{ 'direction': 'rtl' }],                         // text direction\r\n\r\n  [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown\r\n  [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\r\n\r\n  [{ 'color': [] }, { 'background': [] }],          // dropdown with defaults from theme\r\n  [{ 'font': [] }],\r\n  [{ 'align': [] }],\r\n\r\n  ['clean']                                         // remove formatting button\r\n];\r\n\r\n\r\nconst ProjectsDashboard = () => {\r\n     const[description,setDescription]=useState(\"\")\r\n  return (\r\n    <Flex position='relative' mt={\"15vh\"} justify='center' align='center'>\r\n<Flex bg='white'  justify='space-around' mb={\"10vh\"} flexDirection={{base:\"column\"}} boxShadow='md' p='6' rounded='md' width={{base:\"85%\",md:\"70%\"}}>\r\n    <Flex mb={\"5vh\"} width={{base:\"90%\",lg:\"60%\"}} flexDirection={{base:\"column\",lg:\"row\"}}>\r\n        <Input placeholder='title of the project' _placeholder={{color:\"gray\"}}  color='black' _hover={{border:'1px solid black'}} border='1px solid black' />\r\n    </Flex>\r\n\r\n       <label   className='w-[90px] mb-12 h-20 cursor-pointer bg-gray-300 text-sm text-gray-500 rounded-lg border flex justify-center items-center'>\r\n     \r\n<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"ml-1 mr-1 w-4 h-4\">\r\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M3 16.5v2.25A2.25 2.25 0 005.25 21h13.5A2.25 2.25 0 0021 18.75V16.5m-13.5-9L12 3m0 0l4.5 4.5M12 3v13.5\" />\r\n</svg>\r\n     Upload\r\n<input type=\"file\" className='hidden' accept=\"image/*\"  />\r\n\r\n        </label>\r\n\r\n<Flex  ml={{base:'0',lg:\"10vw\"}} width={{base:'100%',lg:\"40%\"}} flexDir='column' mt={{base:\"5vh\",lg:\"0\"}}>\r\n    <Text>Product Description</Text>\r\n  <ReactQuill value={description} \r\n  className='h-[300px] mb-12 lg:h-[400px] w-full'\r\n onChange={setDescription} placeholder=\"Product description\"\r\n modules={EditorModule}  formats={formats}\r\n theme=\"snow\" />\r\n\r\n    <Flex mt={\"10vh\"} justify='flex-end' >\r\n        <Button  color='white'  colorScheme='blue' mr={\"30px\"}>Submit</Button>\r\n        <Button variant=\"outline\" onClick={()=>router.push('/admin/products')}  colorScheme='red' >Cancel</Button> \r\n    </Flex>\r\n\r\n</Flex>\r\n\r\n\r\n\r\n</Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default ProjectsDashboard"
        }
    ]
}