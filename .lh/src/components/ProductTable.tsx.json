{
    "sourceFile": "src/components/ProductTable.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1694613866834,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1694614070813,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -162,9 +162,9 @@\n         \r\n             <Td >\r\n           {new Date(product.createdAt.seconds *1000).toDateString()}\r\n         </Td>\r\n-            <Td   isNumeric>\r\n+            <Td zIndex={1}   isNumeric>\r\n                  <Menu>\r\n   <MenuButton \r\n    px={4}\r\n    fontSize={\"20px\"}\r\n"
                },
                {
                    "date": 1694614214537,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -168,9 +168,9 @@\n   <MenuButton \r\n    px={4}\r\n    fontSize={\"20px\"}\r\n     py={2}\r\n-    bg={\"transparent\"}\r\n+    bg={\"white\"}\r\n     transition='all 0.2s'\r\n     borderRadius='md'\r\n     border=\"none\"\r\n     color=\"black\"\r\n"
                },
                {
                    "date": 1694614246367,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -168,9 +168,9 @@\n   <MenuButton \r\n    px={4}\r\n    fontSize={\"20px\"}\r\n     py={2}\r\n-    bg={\"white\"}\r\n+    bg={\"transparent\"}\r\n     transition='all 0.2s'\r\n     borderRadius='md'\r\n     border=\"none\"\r\n     color=\"black\"\r\n"
                },
                {
                    "date": 1694614270273,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -181,9 +181,9 @@\n     _focus={{  bg: 'transparent' }}\r\n   as={Button}  leftIcon={<FiMoreHorizontal /> } >\r\n   \r\n   </MenuButton>\r\n-  <MenuList>\r\n+  <MenuList   zIndex={3}>\r\n     <MenuItem onClick={()=>onEditProduct(product)} color={\"blue.400\"}>Edit <Icon ml={\"3px\"} as={CiEdit}/></MenuItem>\r\n     <MenuItem onClick={()=>onDeleteProduct(product)} color={\"red\"} >Delete <Icon ml={\"2px\"} as={MdDeleteOutline}/></MenuItem>\r\n     \r\n   </MenuList>\r\n"
                },
                {
                    "date": 1694614316301,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -176,9 +176,9 @@\n     color=\"black\"\r\n     borderWidth='1px'\r\n     _hover={{ bg: 'transparent' }}\r\n     _expanded={{ bg: 'transparent' }}\r\n-     zIndex={3}\r\n+   \r\n     _focus={{  bg: 'transparent' }}\r\n   as={Button}  leftIcon={<FiMoreHorizontal /> } >\r\n   \r\n   </MenuButton>\r\n"
                },
                {
                    "date": 1694677075695,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -119,9 +119,9 @@\n }\r\n \r\n const onEditProduct=async(product:any)=>{\r\n setEditProduct(product)\r\n- router.push(`/admin/products/edit/${product.id}`)\r\n+ router.push(`/admin//edit/${product.id}`)\r\n }\r\n \r\n     return <Flex  position='relative' mt={\"20vh\"} justify='center' align='center' >\r\n <Flex mb={\"10vh\"} flexDirection='column' boxShadow='dark-lg' p='6' rounded='md' width={{base:\"85%\",md:\"50%\"}}>\r\n"
                },
                {
                    "date": 1694677260676,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -119,9 +119,9 @@\n }\r\n \r\n const onEditProduct=async(product:any)=>{\r\n setEditProduct(product)\r\n- router.push(`/admin//edit/${product.id}`)\r\n+ router.push(`/admin/edit/${product.id}`)\r\n }\r\n \r\n     return <Flex  position='relative' mt={\"20vh\"} justify='center' align='center' >\r\n <Flex mb={\"10vh\"} flexDirection='column' boxShadow='dark-lg' p='6' rounded='md' width={{base:\"85%\",md:\"50%\"}}>\r\n"
                },
                {
                    "date": 1695048937744,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -131,9 +131,9 @@\n <Flex justify={'space-between'} align='center'>\r\n <Button onClick={nextPage} _hover={{bg:\"blue.400\"}} p={{base:\"5\",lg:\"2\"}} cursor='pointer' color='white' borderRadius={\"10px\"} bg={\" blue.500\"}>\r\n      <Icon color='white' fontSize={'20px'} as={AiOutlinePlus}/> Add Products\r\n      </Button>\r\n-     <Input borderRadius={'10px'} width={'60%'} ml={\"20px\"} placeholder='Search Products'/>\r\n+     <Input value={name} onChange={(e)=>setName(e.target.value)} borderRadius={'10px'} width={'60%'} ml={\"20px\"} placeholder='Search Products'/>\r\n </Flex>\r\n \r\n \r\n {/* product table */}\r\n"
                }
            ],
            "date": 1694613866834,
            "name": "Commit-0",
            "content": "import { Flex,Text,Link,Button,Icon,Input,useDisclosure } from '@chakra-ui/react';\r\nimport React,{useState,useEffect} from 'react';\r\nimport {AiOutlinePlus} from \"react-icons/ai\"\r\nimport {\r\n  Table,\r\n  Thead,\r\n  Tbody,\r\n  Tfoot,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  TableCaption,\r\n  TableContainer,\r\n} from '@chakra-ui/react'\r\nimport { useRouter } from 'next/router';\r\nimport { auth,db,storage } from '@/firebase/firebase';\r\nimport { collection,deleteDoc, getDocs,doc,serverTimestamp,Timestamp, query, where, orderBy } from \"firebase/firestore\";\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport {\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n} from '@chakra-ui/react'\r\n      import {\r\n  Menu,\r\n  MenuButton,\r\n  MenuList,\r\n  MenuItem,\r\n  MenuItemOption,\r\n  MenuGroup,\r\n  MenuOptionGroup,\r\n  MenuDivider,\r\n} from '@chakra-ui/react'\r\nimport { ref, deleteObject } from \"firebase/storage\";\r\n\r\nimport { BsPlus } from \"react-icons/bs\";\r\nimport { MdDeleteOutline } from \"react-icons/md\";\r\nimport { CiEdit } from \"react-icons/ci\";\r\nimport { FiMoreHorizontal } from \"react-icons/fi\";\r\nimport { useRecoilState } from 'recoil';\r\nimport { productState } from '@/atoms/Products';\r\n\r\n\r\ntype ProductTableProps = {\r\n    \r\n};\r\n\r\nconst ProductTable:React.FC<ProductTableProps> = () => {\r\n  const[user,loading,error]=useAuthState(auth)\r\n   const[products,setProducts]=useState([])\r\n    const { isOpen, onOpen, onClose } = useDisclosure()\r\n    const router =useRouter()\r\n    const citiesRef = collection(db, \"products\");\r\n     const[deleteProduct,setDeleteProduct]=useState<any>([])\r\n     const[name,setName]=useState(\"\")\r\n    const [editProduct, setEditProduct] = useRecoilState(productState);\r\n\r\nconst nextPage=()=>{\r\n    router.push('/admin/newproducts')\r\n}\r\n\r\nconst getProducts = async () => {\r\n    try {\r\n      const productsQuery = query(\r\n        collection(db, \"products\"),\r\n        where(\"creatorId\", \"==\", user?.email),\r\n        \r\n      );\r\n      const productDocs = await getDocs(productsQuery);\r\n      const comments = productDocs.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n     \r\n      setProducts(comments as any);\r\n\r\n    } catch (error: any) {\r\n      console.log(\"getPostComments error\", error.message);\r\n    }\r\n  \r\n  };\r\n\r\n  useEffect(() => {\r\n  \r\n\r\n    getProducts();\r\n  }, [user]);\r\n\r\n\r\nconst onDeleteProduct = async (product:any)=>{\r\nsetDeleteProduct(product)\r\nonOpen()\r\n}\r\nconst deletingProduct=async()=>{\r\n  try{\r\n  await deleteDoc(doc(db, \"products\", deleteProduct.id));\r\n  onClose()\r\n    setProducts((prevImage:any)=>prevImage.filter((item:any)=>item.id != deleteProduct.id))\r\n\r\n      \r\n        deleteProduct.imageURL.map(async (img:any)=>{\r\n   const imageRef = ref(storage, `products/${img.id}/image`);\r\n     deleteObject(imageRef).then(() => {\r\n  // File deleted successfully\r\n}).catch((error:any) => {\r\n  // Uh-oh, an error occurred!\r\n});\r\n     \r\n})\r\n\r\n \r\n}catch(err){\r\n\r\n}\r\n}\r\n\r\nconst onEditProduct=async(product:any)=>{\r\nsetEditProduct(product)\r\n router.push(`/admin/products/edit/${product.id}`)\r\n}\r\n\r\n    return <Flex  position='relative' mt={\"20vh\"} justify='center' align='center' >\r\n<Flex mb={\"10vh\"} flexDirection='column' boxShadow='dark-lg' p='6' rounded='md' width={{base:\"85%\",md:\"50%\"}}>\r\n\r\n\r\n    {/* addproduct button and search bar */}\r\n<Flex justify={'space-between'} align='center'>\r\n<Button onClick={nextPage} _hover={{bg:\"blue.400\"}} p={{base:\"5\",lg:\"2\"}} cursor='pointer' color='white' borderRadius={\"10px\"} bg={\" blue.500\"}>\r\n     <Icon color='white' fontSize={'20px'} as={AiOutlinePlus}/> Add Products\r\n     </Button>\r\n     <Input borderRadius={'10px'} width={'60%'} ml={\"20px\"} placeholder='Search Products'/>\r\n</Flex>\r\n\r\n\r\n{/* product table */}\r\n<Flex  mt={\"5vh\"}>\r\n<TableContainer height={\"50vh\"} overflowY={\"scroll\"} width={\"100%\"}  >\r\n  <Table variant='simple'>\r\n    <TableCaption>Products from Wurvicat</TableCaption>\r\n    <Thead>\r\n      <Tr>\r\n        <Th>Products</Th>\r\n        <Th>CreatedAt</Th>\r\n        <Th isNumeric>Options</Th>\r\n      </Tr>\r\n    </Thead>\r\n     <Tbody>\r\n     \r\n      {products.filter((item:any)=>{\r\n        return item.name.toLowerCase() ===\"\"?item :item.name.toLowerCase().includes(name.toLowerCase())\r\n      } ).map((product:any,index:any)=>{\r\n        \r\n        \r\n        return(\r\n\r\n            <Tr key={index}>\r\n        <Td>{product.name.charAt(0).toUpperCase() + product.name.slice(1)}</Td>\r\n        \r\n            <Td >\r\n          {new Date(product.createdAt.seconds *1000).toDateString()}\r\n        </Td>\r\n            <Td   isNumeric>\r\n                 <Menu>\r\n  <MenuButton \r\n   px={4}\r\n   fontSize={\"20px\"}\r\n    py={2}\r\n    bg={\"transparent\"}\r\n    transition='all 0.2s'\r\n    borderRadius='md'\r\n    border=\"none\"\r\n    color=\"black\"\r\n    borderWidth='1px'\r\n    _hover={{ bg: 'transparent' }}\r\n    _expanded={{ bg: 'transparent' }}\r\n     zIndex={3}\r\n    _focus={{  bg: 'transparent' }}\r\n  as={Button}  leftIcon={<FiMoreHorizontal /> } >\r\n  \r\n  </MenuButton>\r\n  <MenuList>\r\n    <MenuItem onClick={()=>onEditProduct(product)} color={\"blue.400\"}>Edit <Icon ml={\"3px\"} as={CiEdit}/></MenuItem>\r\n    <MenuItem onClick={()=>onDeleteProduct(product)} color={\"red\"} >Delete <Icon ml={\"2px\"} as={MdDeleteOutline}/></MenuItem>\r\n    \r\n  </MenuList>\r\n</Menu>\r\n        </Td>\r\n        \r\n      \r\n      </Tr>\r\n \r\n        )\r\n    \r\n      })}\r\n\r\n    </Tbody>\r\n \r\n  </Table>\r\n</TableContainer>\r\n\r\n</Flex>\r\n<Modal isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader>Delete {deleteProduct.name}</ModalHeader>\r\n          <ModalBody>\r\n<Flex>  Are you sure  you want to delete <Text ml={\"4px\"} fontWeight={\"700\"}>{deleteProduct.name}</Text>  </Flex>\r\n         <Text> Products deleted can not be retrieved</Text>\r\n          </ModalBody>\r\n\r\n          <ModalFooter>\r\n            <Button colorScheme='blue' mr={3} onClick={onClose}>\r\n              Close\r\n            </Button>\r\n            <Button colorScheme='red' onClick={deletingProduct}  bg={\"red.500\"}>Delete</Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n</Flex>\r\n    </Flex>\r\n}\r\nexport default ProductTable;"
        }
    ]
}