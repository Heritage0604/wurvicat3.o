{
    "sourceFile": "src/components/AddProducts.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 10,
            "patches": [
                {
                    "date": 1694602034676,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1694602206966,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -176,9 +176,9 @@\n {/* description textarea */}\r\n <Flex flexDir='column' mt={{base:\"5vh\",lg:\"0\"}}>\r\n     <Text>Product Description</Text>\r\n     <Textarea value={description} onChange={(e)=>setDescription(e.target.value)} size='md' height={{base:\"300px\",lg:\"400px\"}} width={{base:\"100%\",lg:\"300px\"}} placeholder='Product Description'/>\r\n-\r\n+<ReactQuill theme=\"snow\" value={value} onChange={setValue} />;\r\n     <Flex mt={\"3vh\"} justify='flex-end' >\r\n         <Button onClick={handleSubmit} color='white'  colorScheme='blue' mr={\"30px\"}>Submit</Button>\r\n         <Button variant=\"outline\"  colorScheme='red' >Cancel</Button> \r\n     </Flex>\r\n"
                },
                {
                    "date": 1694602208737,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,8 +16,9 @@\n \r\n const AddProducts = () => {\r\n \r\n     const[name,setName]=useState(\"\")\r\n+    const [value, setValue] = useState('');\r\n     const[description,setDescription]=useState(\"\")\r\n     const[price,setPrice]=useState(\"\")\r\n     const[category,setCategory]=useState(\"\")\r\n     const[error,setError]=useState(\"\")\r\n"
                },
                {
                    "date": 1694602278725,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,8 +17,9 @@\n const AddProducts = () => {\r\n \r\n     const[name,setName]=useState(\"\")\r\n     const [value, setValue] = useState('');\r\n+    console.log(value)\r\n     const[description,setDescription]=useState(\"\")\r\n     const[price,setPrice]=useState(\"\")\r\n     const[category,setCategory]=useState(\"\")\r\n     const[error,setError]=useState(\"\")\r\n@@ -176,9 +177,9 @@\n {/* description textarea */}\r\n <Flex flexDir='column' mt={{base:\"5vh\",lg:\"0\"}}>\r\n     <Text>Product Description</Text>\r\n     <Textarea value={description} onChange={(e)=>setDescription(e.target.value)} size='md' height={{base:\"300px\",lg:\"400px\"}} width={{base:\"100%\",lg:\"300px\"}} placeholder='Product Description'/>\r\n-<ReactQuill theme=\"snow\" value={value} onChange={setValue} />;\r\n+<ReactQuill theme=\"snow\" value={value} onChange={setValue} />\r\n     <Flex mt={\"3vh\"} justify='flex-end' >\r\n         <Button onClick={handleSubmit} color='white'  colorScheme='blue' mr={\"30px\"}>Submit</Button>\r\n         <Button variant=\"outline\"  colorScheme='red' >Cancel</Button> \r\n     </Flex>\r\n"
                },
                {
                    "date": 1694607653472,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -176,9 +176,9 @@\n \r\n {/* description textarea */}\r\n <Flex flexDir='column' mt={{base:\"5vh\",lg:\"0\"}}>\r\n     <Text>Product Description</Text>\r\n-    <Textarea value={description} onChange={(e)=>setDescription(e.target.value)} size='md' height={{base:\"300px\",lg:\"400px\"}} width={{base:\"100%\",lg:\"300px\"}} placeholder='Product Description'/>\r\n+    <Textarea  width={{base:\"100%\",lg:\"300px\"}} placeholder='Product Description'/>\r\n <ReactQuill theme=\"snow\" value={value} onChange={setValue} />\r\n     <Flex mt={\"3vh\"} justify='flex-end' >\r\n         <Button onClick={handleSubmit} color='white'  colorScheme='blue' mr={\"30px\"}>Submit</Button>\r\n         <Button variant=\"outline\"  colorScheme='red' >Cancel</Button> \r\n"
                },
                {
                    "date": 1694608425434,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -172,14 +172,15 @@\n \r\n </Flex>\r\n \r\n \r\n-\r\n {/* description textarea */}\r\n <Flex flexDir='column' mt={{base:\"5vh\",lg:\"0\"}}>\r\n     <Text>Product Description</Text>\r\n-    <Textarea  width={{base:\"100%\",lg:\"300px\"}} placeholder='Product Description'/>\r\n-<ReactQuill theme=\"snow\" value={value} onChange={setValue} />\r\n+  <ReactQuill value={description} className='h-[300px] lg:h-[400px]'\r\n+ onChange={setDescription}\r\n+ theme=\"snow\" />\r\n+\r\n     <Flex mt={\"3vh\"} justify='flex-end' >\r\n         <Button onClick={handleSubmit} color='white'  colorScheme='blue' mr={\"30px\"}>Submit</Button>\r\n         <Button variant=\"outline\"  colorScheme='red' >Cancel</Button> \r\n     </Flex>\r\n"
                },
                {
                    "date": 1694608733264,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,11 @@\n import {toast} from \"react-toastify\" \r\n import { useRouter } from 'next/router'\r\n import ReactQuill from 'react-quill';\r\n import 'react-quill/dist/quill.snow.css';\r\n+import dynamic from \"next/dynamic\";\r\n \r\n+const ReactQuill = dynamic(import('react-quill'), { ssr: false })\r\n \r\n const AddProducts = () => {\r\n \r\n     const[name,setName]=useState(\"\")\r\n"
                },
                {
                    "date": 1694608768453,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,8 @@\n import { getDoc,doc ,updateDoc, arrayUnion} from 'firebase/firestore';\r\n import { collection, addDoc,Timestamp } from \"firebase/firestore\";\r\n import {toast} from \"react-toastify\" \r\n import { useRouter } from 'next/router'\r\n-import ReactQuill from 'react-quill';\r\n import 'react-quill/dist/quill.snow.css';\r\n import dynamic from \"next/dynamic\";\r\n \r\n const ReactQuill = dynamic(import('react-quill'), { ssr: false })\r\n@@ -178,9 +177,9 @@\n {/* description textarea */}\r\n <Flex flexDir='column' mt={{base:\"5vh\",lg:\"0\"}}>\r\n     <Text>Product Description</Text>\r\n   <ReactQuill value={description} className='h-[300px] lg:h-[400px]'\r\n- onChange={setDescription}\r\n+ onChange={setDescription} placeholder=\"Write description\"\r\n  theme=\"snow\" />\r\n \r\n     <Flex mt={\"3vh\"} justify='flex-end' >\r\n         <Button onClick={handleSubmit} color='white'  colorScheme='blue' mr={\"30px\"}>Submit</Button>\r\n"
                },
                {
                    "date": 1694608797516,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -177,9 +177,9 @@\n {/* description textarea */}\r\n <Flex flexDir='column' mt={{base:\"5vh\",lg:\"0\"}}>\r\n     <Text>Product Description</Text>\r\n   <ReactQuill value={description} className='h-[300px] lg:h-[400px]'\r\n- onChange={setDescription} placeholder=\"Write description\"\r\n+ onChange={setDescription} placeholder=\"Product description\"\r\n  theme=\"snow\" />\r\n \r\n     <Flex mt={\"3vh\"} justify='flex-end' >\r\n         <Button onClick={handleSubmit} color='white'  colorScheme='blue' mr={\"30px\"}>Submit</Button>\r\n"
                },
                {
                    "date": 1694608873879,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n     const [user, loading, errorUser] = useAuthState(auth);\r\n     const[userValue,setUserValue]=useRecoilState(adminUserState)\r\n     const[editor,setEditor]=useState(\"\")\r\n     const router=useRouter()\r\n-    console.log('d')\r\n+    console.log('des')\r\n \r\n    const onSelectImage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n     const reader = new FileReader();\r\n     if(file.length >= 5 ){\r\n"
                },
                {
                    "date": 1694610028802,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -108,9 +108,9 @@\n }\r\n \r\n },[user,loading,error])\r\n \r\n-modules = {\r\n+Editor = {\r\n   toolbar: [\r\n     [{ 'header': '1'}, {'header': '2'}, { 'font': [] }],\r\n     [{size: []}],\r\n     ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n"
                }
            ],
            "date": 1694602034676,
            "name": "Commit-0",
            "content": "import { adminUserState } from '@/atoms/AdminUser'\r\nimport { Product, props } from '@/atoms/Products'\r\nimport { auth,db } from '@/firebase/firebase'\r\nimport { Flex,Text,Image,Input,Textarea,Button,Stack,Icon } from '@chakra-ui/react'\r\nimport React,{useEffect,useState} from 'react'\r\nimport { useAuthState } from 'react-firebase-hooks/auth'\r\nimport{MdOutlineCancel}from \"react-icons/md\"\r\nimport { useRecoilState } from 'recoil'\r\nimport { getDoc,doc ,updateDoc, arrayUnion} from 'firebase/firestore';\r\nimport { collection, addDoc,Timestamp } from \"firebase/firestore\";\r\nimport {toast} from \"react-toastify\" \r\nimport { useRouter } from 'next/router'\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\nconst AddProducts = () => {\r\n\r\n    const[name,setName]=useState(\"\")\r\n    const[description,setDescription]=useState(\"\")\r\n    const[price,setPrice]=useState(\"\")\r\n    const[category,setCategory]=useState(\"\")\r\n    const[error,setError]=useState(\"\")\r\n    const [file, setFile] = useState<props[]>([]);\r\n    const regex = /^\\s*$/;\r\n    const [user, loading, errorUser] = useAuthState(auth);\r\n    const[userValue,setUserValue]=useRecoilState(adminUserState)\r\n    const[editor,setEditor]=useState(\"\")\r\n    const router=useRouter()\r\n\r\n   const onSelectImage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const reader = new FileReader();\r\n    if(file.length >= 5 ){\r\n        return\r\n    }\r\n    if (event.target.files?.[0]) {\r\n      reader.readAsDataURL(event.target.files[0]);\r\n    }\r\n\r\n    reader.onload = (readerEvent) => {\r\n      if (readerEvent.target?.result) {\r\n        setFile((prevImage)=>[...prevImage,{image:readerEvent.target?.result as string,id:Date.now() as number}]);\r\n      }\r\n    };\r\n  };\r\n  \r\n  const onRemoveImage=(id:number)=>{\r\nsetFile((prevImage)=>prevImage.filter((item)=>item.id != id))\r\n  }\r\n\r\nconst handleSubmit= async()=>{\r\n    \r\n        if (regex.test(name) ||  regex.test(price) ||  regex.test(category) ||  regex.test(description)  ){\r\n      // Empty string\r\n       setError('Input values can not be  empty');\r\n     alert(\"Input values can not be  empty\")\r\n    setTimeout(()=>{\r\nsetError(\"\")\r\n    },8000)\r\n     return\r\n    }\r\ntry{\r\n\r\nconst productData:Product={\r\n    name,\r\n    category,\r\n    description,\r\n    price,\r\n    createdAt:Timestamp.fromDate(new Date()),\r\n    creatorId:user?.email,\r\n    id:\"awlc w\"\r\n}\r\nconst docRef =  addDoc(collection(db, \"products\"),productData);\r\n\r\ntoast.success(\"Product Created Successfully\",{position:\"top-center\",autoClose:1500,theme:\"light\"})\r\nrouter.push('/admin/products')\r\n}\r\ncatch(e:any){\r\ntoast.error(\"An Error Ocurred\",{position:\"top-center\",autoClose:1500,theme:\"light\"})\r\nconsole.log(e.message)\r\n}\r\n\r\n\r\n}\r\n\r\n\r\nconst  getUser= async(id:any)=>{\r\n const docRef = doc(db, \"Admin\", id);\r\nconst docSnap = await getDoc(docRef);\r\n\r\nif (docSnap.exists()) {\r\n  const userData:any=docSnap.data()\r\nsetUserValue(userData)\r\n\r\n \r\n} else {\r\n \r\n}\r\n    }\r\n    \r\nuseEffect(()=>{\r\nif(user){\r\n getUser(user.email)\r\n}\r\n\r\n},[user,loading,error])\r\n\r\n  return (\r\n   <Flex   position='relative' mt={\"15vh\"} justify='center' align='center'>\r\n\r\n<Flex bg='white'  justify='space-around' mb={\"10vh\"} flexDirection={{base:\"column\",lg:'row'}} boxShadow='md' p='6' rounded='md' width={{base:\"85%\",md:\"70%\"}}>\r\n\r\n    {/* product name,price,category and images */}\r\n<Flex flexDir='column'  width={{base:'100%',lg:\"50%\"}}>\r\n\r\n<Flex flexDir='column'>\r\n        <Text ml={\"1px\"} mb={\"5px\"}>Product Name</Text>\r\n<Input type='text' value={name} onChange={(e)=>setName(e.target.value)} placeholder='Product Name'/>\r\n</Flex>\r\n\r\n<Flex mt='20px' flexDir='column'>\r\n        <Text  ml={\"1px\"} mb={\"5px\"}>Price</Text>\r\n<Input type=\"number\" inputMode=\"numeric\" value={price} onChange={(e)=>setPrice(e.target.value)}  placeholder='Product Price'/>\r\n</Flex>\r\n\r\n<Flex mt='20px' flexDir='column'>\r\n        <Text ml={\"1px\"} mb={\"5px\"}>Category</Text>\r\n<Input  value={category} onChange={(e)=>setCategory(e.target.value)} placeholder='Product Category'/>\r\n</Flex>\r\n\r\n\r\n<Flex flexWrap={\"wrap\"} width={\"100%\"} mt={\"10px\"}>\r\n   <label   className='w-[90px] h-20 cursor-pointer bg-gray-300 text-sm text-gray-500 rounded-lg border flex justify-center items-center'>\r\n     \r\n<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"ml-1 mr-1 w-4 h-4\">\r\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M3 16.5v2.25A2.25 2.25 0 005.25 21h13.5A2.25 2.25 0 0021 18.75V16.5m-13.5-9L12 3m0 0l4.5 4.5M12 3v13.5\" />\r\n</svg>\r\n     Upload\r\n<input type=\"file\" className='hidden' accept=\"image/*\" onChange={onSelectImage} />\r\n\r\n        </label>\r\n       {file.length>0 ?\"\": <Flex mt={\"20px\"} ml={\"10px\"}>\r\n          <Text>No Photos Uploaded</Text>\r\n        </Flex>}\r\n        \r\n        {file.map((img,index)=>{\r\n         \r\n            return(\r\n              <Stack key={img?.id} direction='row' position=\"relative\">\r\n  <Image\r\n\r\n  position=\"relative\"\r\n  ml={\"10px\"}\r\n  mt=\"10px\"\r\n  borderRadius={\"10px\"}\r\n    boxSize='68px' \r\n    objectFit='cover'\r\n    src={img?.image}\r\n    alt='Dan Abramov'\r\n  />\r\n <Icon onClick={()=>onRemoveImage(img.id)}  as={MdOutlineCancel} cursor={\"pointer\"} color={'red.500'} fontSize={\"22px\"} position=\"absolute\" right={\"0px\"} top={\"8px\"}/>\r\n\r\n\r\n\r\n</Stack>\r\n            )\r\n        })}\r\n        </Flex>\r\n\r\n\r\n</Flex>\r\n\r\n\r\n\r\n{/* description textarea */}\r\n<Flex flexDir='column' mt={{base:\"5vh\",lg:\"0\"}}>\r\n    <Text>Product Description</Text>\r\n    <Textarea value={description} onChange={(e)=>setDescription(e.target.value)} size='md' height={{base:\"300px\",lg:\"400px\"}} width={{base:\"100%\",lg:\"300px\"}} placeholder='Product Description'/>\r\n\r\n    <Flex mt={\"3vh\"} justify='flex-end' >\r\n        <Button onClick={handleSubmit} color='white'  colorScheme='blue' mr={\"30px\"}>Submit</Button>\r\n        <Button variant=\"outline\"  colorScheme='red' >Cancel</Button> \r\n    </Flex>\r\n\r\n</Flex>\r\n\r\n   </Flex>\r\n   </Flex>\r\n  )\r\n}\r\n\r\nexport default AddProducts"
        }
    ]
}